name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
    
    - name: Lint with flake8
      run: |
        flake8 src/ --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 src/ --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics
    
    - name: Format check with black
      run: black --check src/
    
    - name: Import sort check
      run: isort --check-only src/
    
    - name: Type check with mypy
      run: mypy src/
    
    - name: Test with pytest
      run: pytest tests/ -v
      env:
        # Use synced secrets from Infisical via GitHub
        READWISE_API_KEY: ${{ secrets.READWISE_API_KEY }}
        GLASP_API_KEY: ${{ secrets.GLASP_API_KEY }}
        RSS_FEEDS: ${{ secrets.RSS_FEEDS }}
        BUTTONDOWN_API_KEY: ${{ secrets.BUTTONDOWN_API_KEY }}
        OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
        UNSPLASH_API_KEY: ${{ secrets.UNSPLASH_API_KEY }}
    
    - name: Build Docker image
      run: docker build -t newsletter-bot:test .
    
    - name: Test Docker image
      run: |
        docker run --rm newsletter-bot:test python -c "import src.newsletter_bot; print('Import successful')"

  security:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    steps:
    - uses: actions/checkout@v4
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
    
    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  deploy:
    needs: [test, security]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: production
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Build production Docker image
      run: |
        docker build -t newsletter-bot:${{ github.sha }} .
        docker tag newsletter-bot:${{ github.sha }} newsletter-bot:latest
    
    - name: Deploy application (placeholder)
      run: |
        echo "Deploying with synced secrets from Infisical..."
        echo "Available secrets (without values):"
        env | grep -E "(READWISE|GLASP|RSS|BUTTONDOWN|OPENROUTER|UNSPLASH)" | sed 's/=.*/=***/' || echo "No matching secrets found"
      env:
        # Production secrets synced from Infisical
        READWISE_API_KEY: ${{ secrets.READWISE_API_KEY }}
        GLASP_API_KEY: ${{ secrets.GLASP_API_KEY }}
        RSS_FEEDS: ${{ secrets.RSS_FEEDS }}
        BUTTONDOWN_API_KEY: ${{ secrets.BUTTONDOWN_API_KEY }}
        OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
        UNSPLASH_API_KEY: ${{ secrets.UNSPLASH_API_KEY }}
