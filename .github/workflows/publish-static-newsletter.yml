name: Publish Static Newsletter

on:
  workflow_dispatch:
    inputs:
      newsletter_file:
        description: "Path to newsletter markdown file (relative to repo root)"
        required: true
        default: "newsletter_final.md"
        type: string
      debug:
        description: "Enable debug logging"
        required: false
        default: "false"
        type: boolean

jobs:
  publish-static:
    runs-on: ubuntu-latest
    environment: production
    
    permissions:
      contents: read
      issues: write
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"

      - name: Validate newsletter file
        run: |
          NEWSLETTER_FILE="${{ inputs.newsletter_file }}"
          echo "üîç Validating newsletter file: $NEWSLETTER_FILE"
          
          if [ ! -f "$NEWSLETTER_FILE" ]; then
            echo "‚ùå Newsletter file not found: $NEWSLETTER_FILE"
            exit 1
          fi
          
          # Basic quality checks
          if ! grep -q "# THE FILTER" "$NEWSLETTER_FILE"; then
            echo "‚ùå Newsletter file missing required header"
            exit 1
          fi
          
          WORD_COUNT=$(wc -w < "$NEWSLETTER_FILE")
          if [ $WORD_COUNT -lt 100 ]; then
            echo "‚ùå Newsletter too short: $WORD_COUNT words"
            exit 1
          fi
          
          echo "‚úÖ Newsletter file validated ($WORD_COUNT words)"

      - name: Publish newsletter with Infisical
        env:
          DEBUG_MODE: ${{ inputs.debug }}
        run: |
          echo "üöÄ Publishing newsletter via Infisical integration..."
          
          # Use the existing Infisical setup from other workflows
          infisical run --env=prod --path=/ -- python publish_direct.py "${{ inputs.newsletter_file }}"

      - name: Create success issue
        if: success()
        uses: actions/github-script@v7
        with:
          script: |
            const title = `‚úÖ Newsletter Published Successfully - ${new Date().toISOString().split('T')[0]}`;
            const body = `## üìß Static Newsletter Published
            
            **File:** \`${{ inputs.newsletter_file }}\`
            **Workflow Run:** [#${context.runNumber}](${context.payload.repository.html_url}/actions/runs/${context.runId})
            **Published:** ${new Date().toISOString()}
            **Debug Mode:** ${{ inputs.debug }}
            
            ### üîó Quick Links
            - [üìä Workflow Run](${context.payload.repository.html_url}/actions/runs/${context.runId})
            - [üìß Buttondown Dashboard](https://buttondown.email/filter)
            - [üîÑ Publish Another Newsletter](${context.payload.repository.html_url}/actions/workflows/publish-static-newsletter.yml)
            
            ---
            *Newsletter published via static file workflow - bypassing Readwise dependency*`;
            
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: title,
              body: body,
              labels: ['newsletter', 'success', 'automated', 'static-publish']
            });

      - name: Create failure issue
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const title = `üö® Static Newsletter Publication Failed - ${new Date().toISOString().split('T')[0]}`;
            const body = `## ‚ùå Static Newsletter Publication Failed
            
            **File:** \`${{ inputs.newsletter_file }}\`
            **Workflow Run:** [#${context.runNumber}](${context.payload.repository.html_url}/actions/runs/${context.runId})
            **Failed:** ${new Date().toISOString()}
            **Debug Mode:** ${{ inputs.debug }}
            
            ### üîç Troubleshooting
            - Check workflow logs for specific error details
            - Verify newsletter file exists and has proper format
            - Confirm Infisical secrets are configured correctly
            
            ### üîó Links
            - [üìä Failed Workflow Run](${context.payload.repository.html_url}/actions/runs/${context.runId})
            - [üîß Workflow Configuration](${context.payload.repository.html_url}/blob/main/.github/workflows/publish-static-newsletter.yml)
            
            ---
            *Auto-generated failure report from static newsletter workflow*`;
            
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: title,
              body: body,
              labels: ['newsletter', 'bug', 'automated', 'static-publish', 'priority-high']
            });